{"ast":null,"code":"// // Column.js\n// import React from 'react';\n// import Card from './card';\n// const Column = ({ title, tickets, groupBy }) => {\n//   let filteredTickets;\n//   if (groupBy === 'status') {\n//     // If grouping by status, filter based on the specified status\n//     filteredTickets = tickets.filter((ticket) => ticket.status === title);\n//   } else if (groupBy === 'user') {\n//     // If grouping by user, filter based on the specified userId\n//     filteredTickets = tickets.filter((ticket) => ticket.userId === title);\n//   } else {\n//     // If grouping by priority, filter based on the specified priority\n//     filteredTickets = tickets.filter((ticket) => ticket.priority === parseInt(title));\n//   }\n//   return (\n//     <div className=\"ticket-column\">\n//       <h2>{groupBy === 'status' ? title : groupBy === 'user' ? title : title}</h2>\n//       <div className=\"ticket-list\">\n//         {filteredTickets.map((ticket) => (\n//           <Card key={ticket.id} ticket={ticket} />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n// export default Column;\n// Column.js\nimport React from'react';import Card from'./card';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Column=_ref=>{let{title,tickets,groupBy}=_ref;let filteredTickets;if(groupBy==='status'){// If grouping by status, filter based on the specified status\nfilteredTickets=tickets.filter(ticket=>ticket.status===title);}else if(groupBy==='user'){// If grouping by user, filter based on the specified userId\nfilteredTickets=tickets.filter(ticket=>ticket.userId===title);}else{// If grouping by priority, filter based on the specified priority\nfilteredTickets=tickets.filter(ticket=>ticket.priority===parseInt(title));}return/*#__PURE__*/_jsxs(\"div\",{className:\"ticket-column\",children:[/*#__PURE__*/_jsx(\"h2\",{children:groupBy==='status'?title:groupBy==='user'?title:title}),/*#__PURE__*/_jsx(\"div\",{className:\"ticket-list\",children:filteredTickets.map(ticket=>/*#__PURE__*/_jsx(Card,{ticket:ticket},ticket.id))})]});};export default Column;","map":{"version":3,"names":["React","Card","jsx","_jsx","jsxs","_jsxs","Column","_ref","title","tickets","groupBy","filteredTickets","filter","ticket","status","userId","priority","parseInt","className","children","map","id"],"sources":["C:/Users/shash/OneDrive/Desktop/Frontend_Task/frontend_task/src/Components/column.js"],"sourcesContent":["// // Column.js\r\n// import React from 'react';\r\n// import Card from './card';\r\n\r\n// const Column = ({ title, tickets, groupBy }) => {\r\n//   let filteredTickets;\r\n\r\n//   if (groupBy === 'status') {\r\n//     // If grouping by status, filter based on the specified status\r\n//     filteredTickets = tickets.filter((ticket) => ticket.status === title);\r\n//   } else if (groupBy === 'user') {\r\n//     // If grouping by user, filter based on the specified userId\r\n//     filteredTickets = tickets.filter((ticket) => ticket.userId === title);\r\n//   } else {\r\n//     // If grouping by priority, filter based on the specified priority\r\n//     filteredTickets = tickets.filter((ticket) => ticket.priority === parseInt(title));\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"ticket-column\">\r\n//       <h2>{groupBy === 'status' ? title : groupBy === 'user' ? title : title}</h2>\r\n//       <div className=\"ticket-list\">\r\n//         {filteredTickets.map((ticket) => (\r\n//           <Card key={ticket.id} ticket={ticket} />\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Column;\r\n\r\n\r\n\r\n\r\n// Column.js\r\nimport React from 'react';\r\nimport Card from './card';\r\n\r\nconst Column = ({ title, tickets, groupBy }) => {\r\n  let filteredTickets;\r\n\r\n  if (groupBy === 'status') {\r\n    // If grouping by status, filter based on the specified status\r\n    filteredTickets = tickets.filter((ticket) => ticket.status === title);\r\n  } else if (groupBy === 'user') {\r\n    // If grouping by user, filter based on the specified userId\r\n    filteredTickets = tickets.filter((ticket) => ticket.userId === title);\r\n  } else {\r\n    // If grouping by priority, filter based on the specified priority\r\n    filteredTickets = tickets.filter((ticket) => ticket.priority === parseInt(title));\r\n  }\r\n\r\n  return (\r\n    <div className=\"ticket-column\">\r\n      <h2>{groupBy === 'status' ? title : groupBy === 'user' ? title : title}</h2>\r\n      <div className=\"ticket-list\">\r\n        {filteredTickets.map((ticket) => (\r\n          <Card key={ticket.id} ticket={ticket} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAiC,IAAhC,CAAEC,KAAK,CAAEC,OAAO,CAAEC,OAAQ,CAAC,CAAAH,IAAA,CACzC,GAAI,CAAAI,eAAe,CAEnB,GAAID,OAAO,GAAK,QAAQ,CAAE,CACxB;AACAC,eAAe,CAAGF,OAAO,CAACG,MAAM,CAAEC,MAAM,EAAKA,MAAM,CAACC,MAAM,GAAKN,KAAK,CAAC,CACvE,CAAC,IAAM,IAAIE,OAAO,GAAK,MAAM,CAAE,CAC7B;AACAC,eAAe,CAAGF,OAAO,CAACG,MAAM,CAAEC,MAAM,EAAKA,MAAM,CAACE,MAAM,GAAKP,KAAK,CAAC,CACvE,CAAC,IAAM,CACL;AACAG,eAAe,CAAGF,OAAO,CAACG,MAAM,CAAEC,MAAM,EAAKA,MAAM,CAACG,QAAQ,GAAKC,QAAQ,CAACT,KAAK,CAAC,CAAC,CACnF,CAEA,mBACEH,KAAA,QAAKa,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BhB,IAAA,OAAAgB,QAAA,CAAKT,OAAO,GAAK,QAAQ,CAAGF,KAAK,CAAGE,OAAO,GAAK,MAAM,CAAGF,KAAK,CAAGA,KAAK,CAAK,CAAC,cAC5EL,IAAA,QAAKe,SAAS,CAAC,aAAa,CAAAC,QAAA,CACzBR,eAAe,CAACS,GAAG,CAAEP,MAAM,eAC1BV,IAAA,CAACF,IAAI,EAAiBY,MAAM,CAAEA,MAAO,EAA1BA,MAAM,CAACQ,EAAqB,CACxC,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}