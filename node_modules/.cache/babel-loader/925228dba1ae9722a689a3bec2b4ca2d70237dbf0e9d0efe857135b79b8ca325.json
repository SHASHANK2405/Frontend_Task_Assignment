{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\OneDrive\\\\Desktop\\\\Frontend_Task\\\\frontend_task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Column from './Components/column';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [groupBy, setGroupBy] = useState('status'); // Default grouping by status\n  const [sortOption, setSortOption] = useState('priority'); // Default sorting by priority\n  const [displayOption, setDisplayOption] = useState(false); // State for the display option\n\n  useEffect(() => {\n    // Fetch data from the API\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        const data = await response.json();\n        console.log('API Data:', data);\n        if (Array.isArray(data.tickets)) {\n          setTickets(data.tickets);\n        } else {\n          console.error('Data does not contain a valid tickets array:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleGroupByChange = option => {\n    setGroupBy(option);\n  };\n  const handleSortOptionChange = option => {\n    setSortOption(option);\n  };\n  const handleDisplayToggle = () => {\n    setDisplayOption(!displayOption);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"displayDropdown\",\n        onClick: handleDisplayToggle,\n        children: displayOption ? 'Close Display Options' : 'Open Display Options'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), displayOption && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"groupingDropdown\",\n          children: \"Grouping:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"groupingDropdown\",\n          value: groupBy,\n          onChange: e => handleGroupByChange(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"status\",\n            children: \"By Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"user\",\n            children: \"By User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"priority\",\n            children: \"By Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"orderingDropdown\",\n          children: \"Ordering:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"orderingDropdown\",\n          value: sortOption,\n          onChange: e => handleSortOptionChange(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"priority\",\n            children: \"By Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"title\",\n            children: \"By Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      tickets: tickets,\n      groupBy: groupBy,\n      sortOption: sortOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bHHff0nOss6iJ5rkcna+b2KMMYI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Column","jsxDEV","_jsxDEV","App","_s","tickets","setTickets","groupBy","setGroupBy","sortOption","setSortOption","displayOption","setDisplayOption","fetchData","response","fetch","data","json","console","log","Array","isArray","error","handleGroupByChange","option","handleSortOptionChange","handleDisplayToggle","children","className","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/shash/OneDrive/Desktop/Frontend_Task/frontend_task/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Column from './Components/column';\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [tickets, setTickets] = useState([]);\r\n  const [groupBy, setGroupBy] = useState('status'); // Default grouping by status\r\n  const [sortOption, setSortOption] = useState('priority'); // Default sorting by priority\r\n  const [displayOption, setDisplayOption] = useState(false); // State for the display option\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the API\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\r\n        const data = await response.json();\r\n        console.log('API Data:', data);\r\n\r\n        if (Array.isArray(data.tickets)) {\r\n          setTickets(data.tickets);\r\n        } else {\r\n          console.error('Data does not contain a valid tickets array:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleGroupByChange = (option) => {\r\n    setGroupBy(option);\r\n  };\r\n\r\n  const handleSortOptionChange = (option) => {\r\n    setSortOption(option);\r\n  };\r\n\r\n  const handleDisplayToggle = () => {\r\n    setDisplayOption(!displayOption);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='display'>\r\n        {/* Dropdown for Display */}\r\n        {/* <label htmlFor=\"displayDropdown\">Display:</label> */}\r\n        <button\r\n          id=\"displayDropdown\"\r\n          onClick={handleDisplayToggle}\r\n        >\r\n          {displayOption ? 'Close Display Options' : 'Open Display Options'}\r\n        </button>\r\n\r\n        {/* Display Options */}\r\n        {displayOption && (\r\n          <div className=\"display-options\">\r\n            {/* Dropdown for Grouping */}\r\n            <label htmlFor=\"groupingDropdown\">Grouping:</label>\r\n            <select\r\n              id=\"groupingDropdown\"\r\n              value={groupBy}\r\n              onChange={(e) => handleGroupByChange(e.target.value)}\r\n            >\r\n              <option value='status'>By Status</option>\r\n              <option value='user'>By User</option>\r\n              <option value='priority'>By Priority</option>\r\n            </select>\r\n\r\n            {/* Dropdown for Ordering */}\r\n            <label htmlFor=\"orderingDropdown\">Ordering:</label>\r\n            <select\r\n              id=\"orderingDropdown\"\r\n              value={sortOption}\r\n              onChange={(e) => handleSortOptionChange(e.target.value)}\r\n            >\r\n              <option value='priority'>By Priority</option>\r\n              <option value='title'>By Title</option>\r\n            </select>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <Column tickets={tickets} groupBy={groupBy} sortOption={sortOption} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}