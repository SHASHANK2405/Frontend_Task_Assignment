{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\OneDrive\\\\Desktop\\\\Frontend_Task\\\\frontend_task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // App.js\n// import React, { useState, useEffect } from 'react';\n// import Column from './Components/column';\n// import \"./App.css\";\n\n// const App = () => {\n//   const [tickets, setTickets] = useState([]);\n//   const [groupBy, setGroupBy] = useState('status');\n//   const [sortOption, setSortOption] = useState('priority');\n//   const [displayOption, setDisplayOption] = useState(false);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n//         const data = await response.json();\n\n//         if (Array.isArray(data.tickets)) {\n//           setTickets(data.tickets);\n//         } else {\n//           console.error('Data does not contain a valid tickets array:', data);\n//         }\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const handleGroupByChange = (option) => {\n//     setGroupBy(option);\n//   };\n\n//   const handleSortOptionChange = (option) => {\n//     setSortOption(option);\n//   };\n\n//   const handleDisplayToggle = () => {\n//     setDisplayOption(!displayOption);\n//   };\n\n//   const allStatusValues = [\"Todo\", \"In progress\", \"Backlog\", \"Completed\", \"Blocked\"];\n\n//   return (\n//     <div className='app'>\n//       <div className='display'>\n//         {/* Dropdown for Display */}\n//         <label htmlFor=\"displayDropdown\">Display:</label>\n//         <button\n//           id=\"displayDropdown\"\n//           onClick={handleDisplayToggle}\n//         >\n//           &#9662;\n//         </button>\n\n//         {/* Display Options */}\n//         {displayOption && (\n//           <div className=\"display-options\">\n//             <div className='option-a'>\n//               {/* Dropdown for Grouping */}\n//               <label htmlFor=\"groupingDropdown\">Grouping:</label>\n//               <select\n//                 id=\"groupingDropdown\"\n//                 value={groupBy}\n//                 onChange={(e) => handleGroupByChange(e.target.value)}\n//               >\n//                 <option value='status'>By Status</option>\n//                 <option value='user'>By User</option>\n//                 <option value='priority'>By Priority</option>\n//               </select>\n//             </div>\n\n//             <div className='option-b'>\n//               {/* Dropdown for Ordering */}\n//               <label htmlFor=\"orderingDropdown\">Ordering:</label>\n//               <select\n//                 id=\"orderingDropdown\"\n//                 value={sortOption}\n//                 onChange={(e) => handleSortOptionChange(e.target.value)}\n//               >\n//                 <option value='priority'>By Priority</option>\n//                 <option value='title'>By Title</option>\n//               </select>\n//             </div>\n//           </div>\n//         )}\n\n//       </div>\n\n//       <div className='hero-section'>\n//         {/* Render a Column for each possible status value */}\n//         {allStatusValues.map((status) => (\n//           <Column\n//             key={status}\n//             title={status}\n//             tickets={tickets}\n//             groupBy={groupBy}\n//             sortOption={sortOption}\n//             status={status}\n//           />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport Column from './Components/column';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [groupBy, setGroupBy] = useState('status');\n  const [sortOption, setSortOption] = useState('priority');\n  const [displayOption, setDisplayOption] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        const data = await response.json();\n        if (Array.isArray(data.tickets)) {\n          setTickets(data.tickets);\n        } else {\n          console.error('Data does not contain a valid tickets array:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleGroupByChange = option => {\n    setGroupBy(option);\n  };\n  const handleSortOptionChange = option => {\n    setSortOption(option);\n  };\n  const handleDisplayToggle = () => {\n    setDisplayOption(!displayOption);\n  };\n  const allStatusValues = [\"Todo\", \"In progress\", \"Backlog\", \"Completed\", \"Blocked\"];\n  const allUserValues = [\"usr-1\", \"usr-2\", \"usr-3\", \"usr-4\", \"usr-5\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"displayDropdown\",\n        children: \"Display:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"displayDropdown\",\n        onClick: handleDisplayToggle,\n        children: \"\\u25BE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), displayOption && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-a\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"groupingDropdown\",\n            children: \"Grouping:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"groupingDropdown\",\n            value: groupBy,\n            onChange: e => handleGroupByChange(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"status\",\n              children: \"By Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"user\",\n              children: \"By User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"priority\",\n              children: \"By Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-b\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"orderingDropdown\",\n            children: \"Ordering:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"orderingDropdown\",\n            value: sortOption,\n            onChange: e => handleSortOptionChange(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"priority\",\n              children: \"By Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"title\",\n              children: \"By Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-section\",\n      children: groupBy === 'user' ? allUserValues.map(user => /*#__PURE__*/_jsxDEV(Column, {\n        title: user,\n        tickets: tickets,\n        groupBy: groupBy,\n        sortOption: sortOption,\n        user: user\n      }, user, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this)) : allStatusValues.map(status => /*#__PURE__*/_jsxDEV(Column, {\n        title: status,\n        tickets: tickets,\n        groupBy: groupBy,\n        sortOption: sortOption,\n        status: status\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bHHff0nOss6iJ5rkcna+b2KMMYI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Column","jsxDEV","_jsxDEV","App","_s","tickets","setTickets","groupBy","setGroupBy","sortOption","setSortOption","displayOption","setDisplayOption","fetchData","response","fetch","data","json","Array","isArray","console","error","handleGroupByChange","option","handleSortOptionChange","handleDisplayToggle","allStatusValues","allUserValues","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","value","onChange","e","target","map","user","title","status","_c","$RefreshReg$"],"sources":["C:/Users/shash/OneDrive/Desktop/Frontend_Task/frontend_task/src/App.js"],"sourcesContent":["// // App.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import Column from './Components/column';\r\n// import \"./App.css\";\r\n\r\n// const App = () => {\r\n//   const [tickets, setTickets] = useState([]);\r\n//   const [groupBy, setGroupBy] = useState('status');\r\n//   const [sortOption, setSortOption] = useState('priority');\r\n//   const [displayOption, setDisplayOption] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\r\n//         const data = await response.json();\r\n\r\n//         if (Array.isArray(data.tickets)) {\r\n//           setTickets(data.tickets);\r\n//         } else {\r\n//           console.error('Data does not contain a valid tickets array:', data);\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const handleGroupByChange = (option) => {\r\n//     setGroupBy(option);\r\n//   };\r\n\r\n//   const handleSortOptionChange = (option) => {\r\n//     setSortOption(option);\r\n//   };\r\n\r\n//   const handleDisplayToggle = () => {\r\n//     setDisplayOption(!displayOption);\r\n//   };\r\n\r\n//   const allStatusValues = [\"Todo\", \"In progress\", \"Backlog\", \"Completed\", \"Blocked\"];\r\n\r\n//   return (\r\n//     <div className='app'>\r\n//       <div className='display'>\r\n//         {/* Dropdown for Display */}\r\n//         <label htmlFor=\"displayDropdown\">Display:</label>\r\n//         <button\r\n//           id=\"displayDropdown\"\r\n//           onClick={handleDisplayToggle}\r\n//         >\r\n//           &#9662;\r\n//         </button>\r\n\r\n//         {/* Display Options */}\r\n//         {displayOption && (\r\n//           <div className=\"display-options\">\r\n//             <div className='option-a'>\r\n//               {/* Dropdown for Grouping */}\r\n//               <label htmlFor=\"groupingDropdown\">Grouping:</label>\r\n//               <select\r\n//                 id=\"groupingDropdown\"\r\n//                 value={groupBy}\r\n//                 onChange={(e) => handleGroupByChange(e.target.value)}\r\n//               >\r\n//                 <option value='status'>By Status</option>\r\n//                 <option value='user'>By User</option>\r\n//                 <option value='priority'>By Priority</option>\r\n//               </select>\r\n//             </div>\r\n\r\n//             <div className='option-b'>\r\n//               {/* Dropdown for Ordering */}\r\n//               <label htmlFor=\"orderingDropdown\">Ordering:</label>\r\n//               <select\r\n//                 id=\"orderingDropdown\"\r\n//                 value={sortOption}\r\n//                 onChange={(e) => handleSortOptionChange(e.target.value)}\r\n//               >\r\n//                 <option value='priority'>By Priority</option>\r\n//                 <option value='title'>By Title</option>\r\n//               </select>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n\r\n//       </div>\r\n\r\n//       <div className='hero-section'>\r\n//         {/* Render a Column for each possible status value */}\r\n//         {allStatusValues.map((status) => (\r\n//           <Column\r\n//             key={status}\r\n//             title={status}\r\n//             tickets={tickets}\r\n//             groupBy={groupBy}\r\n//             sortOption={sortOption}\r\n//             status={status}\r\n//           />\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n// App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Column from './Components/column';\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [tickets, setTickets] = useState([]);\r\n  const [groupBy, setGroupBy] = useState('status');\r\n  const [sortOption, setSortOption] = useState('priority');\r\n  const [displayOption, setDisplayOption] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\r\n        const data = await response.json();\r\n\r\n        if (Array.isArray(data.tickets)) {\r\n          setTickets(data.tickets);\r\n        } else {\r\n          console.error('Data does not contain a valid tickets array:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleGroupByChange = (option) => {\r\n    setGroupBy(option);\r\n  };\r\n\r\n  const handleSortOptionChange = (option) => {\r\n    setSortOption(option);\r\n  };\r\n\r\n  const handleDisplayToggle = () => {\r\n    setDisplayOption(!displayOption);\r\n  };\r\n\r\n  const allStatusValues = [\"Todo\", \"In progress\", \"Backlog\", \"Completed\", \"Blocked\"];\r\n  const allUserValues = [\"usr-1\", \"usr-2\", \"usr-3\", \"usr-4\", \"usr-5\"];\r\n\r\n  return (\r\n    <div className='app'>\r\n      <div className='display'>\r\n        {/* Dropdown for Display */}\r\n        <label htmlFor=\"displayDropdown\">Display:</label>\r\n        <button\r\n          id=\"displayDropdown\"\r\n          onClick={handleDisplayToggle}\r\n        >\r\n          &#9662;\r\n        </button>\r\n\r\n        {/* Display Options */}\r\n        {displayOption && (\r\n          <div className=\"display-options\">\r\n            <div className='option-a'>\r\n              {/* Dropdown for Grouping */}\r\n              <label htmlFor=\"groupingDropdown\">Grouping:</label>\r\n              <select\r\n                id=\"groupingDropdown\"\r\n                value={groupBy}\r\n                onChange={(e) => handleGroupByChange(e.target.value)}\r\n              >\r\n                <option value='status'>By Status</option>\r\n                <option value='user'>By User</option>\r\n                <option value='priority'>By Priority</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className='option-b'>\r\n              {/* Dropdown for Ordering */}\r\n              <label htmlFor=\"orderingDropdown\">Ordering:</label>\r\n              <select\r\n                id=\"orderingDropdown\"\r\n                value={sortOption}\r\n                onChange={(e) => handleSortOptionChange(e.target.value)}\r\n              >\r\n                <option value='priority'>By Priority</option>\r\n                <option value='title'>By Title</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n      </div>\r\n\r\n      <div className='hero-section'>\r\n        {/* Render a Column for each possible status or user value */}\r\n        {groupBy === 'user' ? (\r\n          allUserValues.map((user) => (\r\n            <Column\r\n              key={user}\r\n              title={user}\r\n              tickets={tickets}\r\n              groupBy={groupBy}\r\n              sortOption={sortOption}\r\n              user={user}\r\n            />\r\n          ))\r\n        ) : (\r\n          allStatusValues.map((status) => (\r\n            <Column\r\n              key={status}\r\n              title={status}\r\n              tickets={tickets}\r\n              groupBy={groupBy}\r\n              sortOption={sortOption}\r\n              status={status}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}